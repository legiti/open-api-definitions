components:
  schemas:
    Auth:
      post:
        summary: Notify Legiti any time a user tries to login and logout of your platform
        description: >-
          Account login/logout behavior is highly correlated with fraudulent 
          activity. You can send information about successful or failed login 
          attempts for an account (as well as logouts)
        tags:
          - auth
        operationId: auth_post
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - user_id
                  - action_type
                properties:
                  user_id:
                    type: string
                    description: The user ID that was (or was attempted to be) logged into
                  action_type:
                    type: string
                    enum:
                      - login_success
                      - login_failure
                      - logout
                    description: >-
                      What type of authentication activity occurred. 
                      Accepted values are limited to 'login_success', 
                      'login_failure', and 'logout' (case-insensitive)
        responses:
          '201':
            $ref: "./responses.yml#/components/schemas/Collection20xResponse"
          '200':
            $ref: "./responses.yml#/components/schemas/Collection20xResponse"
          '400':
            $ref: "./responses.yml#/components/schemas/400Response"
          '401':
            $ref: "./responses.yml#/components/schemas/401Response"
          '403':
            $ref: "./responses.yml#/components/schemas/403Response"
          '503':
            $ref: "./responses.yml#/components/schemas/503Response"
    Address:
      type: object
      required:
        - street_name
        - street_number
        - city
        - zip_code
        - state
        - country
      properties:
        street_name:
          type: string
          description: The street of the address
        street_number:
          type: string
          description: The street number of the address
        city:
          type: string
          description: The city in which the address is located
        zip_code:
          type: string
          description: The zip code (e.g. CEP) of the address
        state:
          type: string
          description: The up to three-character ISO 3166-2 abbreviation of the state in which the address is located
          maxLength: 3
        country:
          type: string
          description: The two-character ISO 3166-2 country code in which the address is located
          maxLength: 2
          minLength: 2
        latitude:
          type: number
          format: float
          description: The exact latitude of the address
        longitude: 
          type: number
          format: float
          description: The exact longitude of the address
    OrderMarkedFraudulent:
      post:
        summary: Notify Legiti that an order was found to be fraudulent
        tags:
          - order
        operationId: order_marked_fraudulent_post
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - order_id
                  - fraud_signal_type
                properties:
                  order_id:
                    type: string
                    description: The order's unique identifier within your platform
                  fraud_signal_type:
                    type: string
                    enum:
                      - acquirer
                      - manual_analysis
                      - chargeback
                      - external_antifraud
                      - internal_system
                      - other
                    description: >-
                      The mechanism by which you identified the order as fraudulent. 
                      Current accepted values are acquirer, manual_analysis, chargeback, 
                      external_antifraud, internal_system, and other
        responses:
          '200':
            $ref: "./responses.yml#/components/schemas/Collection20xResponse"
          '201':
            $ref: "./responses.yml#/components/schemas/Collection20xResponse"
          '200':
            $ref: "./responses.yml#/components/schemas/Collection20xResponse"
          '400':
            $ref: "./responses.yml#/components/schemas/400Response"
          '401':
            $ref: "./responses.yml#/components/schemas/401Response"
          '403':
            $ref: "./responses.yml#/components/schemas/403Response"
          '503':
            $ref: "./responses.yml#/components/schemas/503Response"
    PaymentUpdate:
      put:
        summary: Notify Legiti of payment status updates (supplied by your acquirer)
        tags:
          - order
        operationId: payment_update_put
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - status
                properties:
                  id:
                    type: string
                    description: The unique identifier for the payment within your platform
                  status:
                    $ref: "./enums.yml#/components/schemas/PaymentStatus"
                  status_reason:
                    type: string
                    description: The reason for the status change
        responses:
          '200':
            $ref: "./responses.yml#/components/schemas/Collection20xResponse"
          '400':
            $ref: "./responses.yml#/components/schemas/400Response"
          '401':
            $ref: "./responses.yml#/components/schemas/401Response"
          '403':
            $ref: "./responses.yml#/components/schemas/403Response"
          '503':
            $ref: "./responses.yml#/components/schemas/503Response"
    User:
      post:
        summary: Notify Legiti any time a new user is created
        tags:
          - user
        operationId: user_post
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - email
                  - name
                  - user_type
                  - creation_datetime
                properties: 
                  id:
                    type: string
                    description: Your unique identifier for this user in your platform
                  email:
                    type: string
                    description: The main email associated with the user
                  document:
                    type: string
                    description: The document number associated with the user
                  document_type:
                    $ref: "./enums.yml#/components/schemas/DocumentType"
                    description: >-
                      The document type associated with the user's document number. 
                      Accepted values are cpf, cnpj, passport, rg, rne, and other
                  phone_number:
                    type: string
                    description: >-
                      The main phone number associated with the user 
                      (numbers only; country code not included). 
                      Note: if phone_number is provided, phone_country_code 
                      is also required
                  phone_country_code:
                    type: string
                    description: >-
                      The international country code associated with the phone number 
                      (numbers only). Note: if phone_country_code is provided, 
                      phone_number is also required
                  password_hash:
                    type: string
                    description: The secure (salted and hashed) password associated with the user
                  name:
                    type: string
                    description: The user's full name
                  gender:
                    type: string
                    enum:
                      - male
                      - female
                      - other
                      - undisclosed
                    description: >-
                      The user's gender. Accepted values are: 
                      male, female, other, and undisclosed
                  user_type:
                    type: string
                    enum:
                      - consumer
                      - service_provider
                    description: >- 
                      The user's type in your platform. Accepted values are: 
                      consumer, service_provider
                  creation_datetime:
                    type: string
                    format: date-time
                    description: The datetime of when the user account was created
                  address:
                    description: The address associated with the user
                    $ref: "./entities.yml#/components/schemas/Address"
        responses:
          '201':
            $ref: "./responses.yml#/components/schemas/Collection20xResponse"
          '200':
            $ref: "./responses.yml#/components/schemas/Collection20xResponse"
          '400':
            $ref: "./responses.yml#/components/schemas/400Response"
          '401':
            $ref: "./responses.yml#/components/schemas/401Response"
          '403':
            $ref: "./responses.yml#/components/schemas/403Response"
          '503':
            $ref: "./responses.yml#/components/schemas/503Response"
      put:
        summary: Send information to Legiti any time a user's information (email, address, name, password, etc...) is altered.
        tags:
          - user
        operationId: user_put
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                properties: 
                  id:
                    type: string
                    description: Your unique identifier for this user in your platform
                  email:
                    type: string
                    description: The main email associated with the user
                  document:
                    type: string
                    description: The document number associated with the user
                  document_type:
                    $ref: "./enums.yml#/components/schemas/DocumentType"
                    description: >-
                      The document type associated with the user's document number. 
                      Accepted values are cpf, cnpj, passport, rg, rne, and other
                  phone_number:
                    type: integer
                    description: >-
                      The main phone number associated with the user 
                      (numbers only; country code not included). 
                      Note: if phone_number is provided, phone_country_code 
                      is also required
                  phone_country_code:
                    type: integer
                    description: >-
                      The international country code associated with the phone number 
                      (numbers only). Note: if phone_country_code is provided, 
                      phone_number is also required
                  password_hash:
                    type: string
                    description: The secure (salted and hashed) password associated with the user
                  name:
                    type: string
                    description: The user's full name
                  gender:
                    type: string
                    enum:
                      - male
                      - female
                      - other
                      - undisclosed
                    description: >-
                      The user's gender. Accepted values are: 
                      male, female, other, and undisclosed
                  user_type:
                    type: string
                    enum:
                      - consumer
                      - service_provider
                    description: >- 
                      The user's type in your platform. Accepted values are: 
                      consumer, service_provider
                  creation_datetime:
                    type: string
                    format: date-time
                    description: The datetime of when the user account was created
                  address:
                    description: The address associated with the user
                    $ref: "./entities.yml#/components/schemas/Address"
        responses:
          '200':
            $ref: "./responses.yml#/components/schemas/Collection20xResponse"
          '400':
            $ref: "./responses.yml#/components/schemas/400Response"
          '401':
            $ref: "./responses.yml#/components/schemas/401Response"
          '403':
            $ref: "./responses.yml#/components/schemas/403Response"
          '503':
            $ref: "./responses.yml#/components/schemas/503Response"
    Password:
      post:
        summary: Notify Legiti any time a user who is not logged in either resets or recovers their password
        tags:
          - password
        operationId: password_post
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - recovery_email
                  - action_type
                properties:
                  recovery_email:
                    type: string
                    description: The email used to recover or reset the password
                  action_type:
                    type: string
                    enum:
                      - recovery
                      - reset
                    description: >-
                      The type of user action that was taken. 
                      Accepted values are recovery and reset (case-insensitive)
        responses:
          '201':
            $ref: "./responses.yml#/components/schemas/Collection20xResponse"
          '200':
            $ref: "./responses.yml#/components/schemas/Collection20xResponse"
          '400':
            $ref: "./responses.yml#/components/schemas/400Response"
          '401':
            $ref: "./responses.yml#/components/schemas/401Response"
          '403':
            $ref: "./responses.yml#/components/schemas/403Response"
          '503':
            $ref: "./responses.yml#/components/schemas/503Response"
    EvaluationPaymentEntity:
      type: object
      properties:
        document_type:
          $ref: "./enums.yml#/components/schemas/DocumentType"
          description: >-
            The document type associated with the payment's document
            number. Accepted values are cpf, cnpj, passport, rg,
            rne, and other
        document:
          type: string
          description: The document number associated with the payer
        credit_card:
          $ref: "#/components/schema/CreditCard"
    CreditCard:
      description: >-
        The credit card associated with the payment.
        Note: credit_card is required only if the method
        is credit_card
      type: object
      required:
        - first_six_digits
        - last_four_digits
      properties:
        first_six_digits:
          type: string
          minLength: 6
          maxLength: 6
          description: The first six digits of the credit card number (should be only digits)
        last_four_digits:
          type: string
          minLength: 4
          maxLength: 4
          description: The last four digits of the credit card number (should be only digits)
        