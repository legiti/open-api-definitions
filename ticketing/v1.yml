openapi: 3.0.1
externalDocs:
    description: Official documentation
    url: https://docs.legiti.com/
info:
  title: Legiti Ticketing API
  description: >-
    Legiti protects your company from losses due to fraud and
    chargebacks, maximizing revenue from valid purchases and minimizing
    unnecessary customer friction. We accomplish this by making predictions
    based on past and present customer behavior to evaluate the likelihood
    that an order is fraudulent.
  version: "1.0"
  license:
    name: MIT
  contact: 
    name: Legiti Dev Team
    url: http://www.docs.legiti.com
    email: publishing@legiti.com
servers:
  - url: "https://legiti-api.lgtcdn.net"
paths:
  /ticketing/v1/evaluation:
    post:
      description: Send requests to this endpoint whenever you have an order that you would like to get evaluated by Legiti.
      tags:
        - evaluation
      operationId: ticketing_evaluation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - order_id
                - user_id
                - total_paid_value
                - order_datetime
                - event_ids
                - payments
              properties:
                order_id:
                  type: string
                  description: The order's unique identifier within your platform
                user_id:
                  type: string
                  description: Your unique identifier for this user in your platform
                total_paid_value:
                  type: number
                  format: float
                  description: The exact amount that the user paid
                order_datetime:
                  type: string
                  format: date-time
                  description: The order's date and time of sale in UTC following the ISO 8601 format (YYYY-MM-DDTHH:mm:ssZ)
                event_ids:
                  type: array
                  items:
                    type: string
                  description: Your platform's unique identifier for the event associated with the order
                payments:
                  type: array
                  items:
                    type: object
                    properties:
                      document_type:
                        $ref: "../base/v1/enums.yml#/components/schemas/DocumentType"
                        description: >-
                          The document type associated with the payment's document
                          number. Accepted values are cpf, cnpj, passport, rg,
                          rne, and other
                      document:
                        type: string
                        description: The document number associated with the payer
                      credit_card:
                        type: object
                        description: >-
                          The credit card associated with the payment.
                          Note: credit_card is required only if the method
                          is credit_card
                        required:
                          - first_six_digits
                          - last_four_digits
                        properties:
                          first_six_digits:
                            type: string
                            minLength: 6
                            maxLength: 6
                            description: The first six digits of the credit card number (should be only digits)
                          last_four_digits:
                            type: string
                            minLength: 4
                            maxLength: 4
                            description: The last four digits of the credit card number (should be only digits)
                  description: the payments used in this purchase
      responses:
          '200':
            $ref: "../base/v1/responses.yml#/components/schemas/20xResponse"
          '201':
            $ref: "../base/v1/responses.yml#/components/schemas/20xResponse"
          '400':
            $ref: "../base/v1/responses.yml#/components/schemas/400Response"
          '401':
            $ref: "../base/v1/responses.yml#/components/schemas/401Response"
          '403':
            $ref: "../base/v1/responses.yml#/components/schemas/403Response" 
          '503':
            $ref: "../base/v1/responses.yml#/components/schemas/503Response"
  /ticketing/v1/event:
    post:
      description: Notify Legiti any time a new event is created.
      tags:
        - event
      operationId: event_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
      responses:
        '200':
          $ref: "../base/v1/responses.yml#/components/schemas/20xResponse"
        '201':
          $ref: "../base/v1/responses.yml#/components/schemas/20xResponse"
        '400':
          $ref: "../base/v1/responses.yml#/components/schemas/400Response"
        '401':
          $ref: "../base/v1/responses.yml#/components/schemas/401Response"
        '403':
          $ref: "../base/v1/responses.yml#/components/schemas/403Response" 
        '503':
          $ref: "../base/v1/responses.yml#/components/schemas/503Response" 
    put:
      description: Send information to Legiti any time an event's information (description, venue, start/end time, etc...) is altered.
      tags:
        - event
      operationId: event_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
      responses:
        '200':
          $ref: "../base/v1/responses.yml#/components/schemas/20xResponse"
        '400':
          $ref: "../base/v1/responses.yml#/components/schemas/400Response"
        '401':
          $ref: "../base/v1/responses.yml#/components/schemas/401Response"
        '403':
          $ref: "../base/v1/responses.yml#/components/schemas/403Response"
        '503':
          $ref: "../base/v1/responses.yml#/components/schemas/503Response" 
  /ticketing/v1/order:
    post:
      summary: Notify Legiti any time a new order is created
      description: >-
        You can send order-related information to Legiti via the /order endpoint
      tags:
        - order
      operationId: order_post
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - user_id
                - total_paid_value
                - status
                - tickets
                - payments
              properties:
                id:
                  type: string
                  description: The order's unique identifier within your platform
                user_id:
                  type: string
                  description: The buyer's id
                total_paid_value:
                  type: number
                  format: float
                  minimum: 0
                  description: The exact amount that the user paid
                total_gross_value:
                  type: number
                  format: float
                  minimum: 0
                  description: The sum of all the order items value
                discount_value:
                  type: number
                  format: float
                  minimum: 0
                  description: The discount value applied to the order
                coupon_names:
                  type: array
                  description: >-
                   The name of the coupons that were applied. Note: 
                   if coupon_names is provided, discount_value is also required
                  items:
                    type: string
                currency:
                  type: string
                  description: The currency of the total_paid_value, as an ISO-4217 currency code
                status:
                  $ref: "../base/v1/enums.yml#/components/schemas/OrderStatus"
                tickets:
                  type: array
                  description: The purchased tickets
                  items:
                    type: object
                    required:
                      - id
                      - event_id
                      - unit_price
                      - valid_from
                      - valid_until
                    properties:
                      id:
                        type: string
                        description: Your platform's unique identifier for the ticket
                      unit_price:
                        type: number
                        format: float
                        description: The purchased ticket's unit price
                      discount:
                        type: number
                        format: float
                        description: The discount amount applied to this ticket
                      valid_from:
                        type: string
                        format: date-time
                        description: The time at which this ticket becomes valid for entry to the event
                      valid_until:
                        type: string
                        format: date-time
                        description: The time at which this ticket stops being valid for entry to the event
                      event_id:
                        type: string
                        description: The ID of the Event the ticket is associated with
                      guest:
                        type: object
                        description: The guest with whom the ticket is associated
                        required:
                          - name
                        properties:
                          email:
                            type: string
                            description: The email of the user with whom the ticket is associated
                          name:
                            type: string
                            description: The name of the user with whom the ticket is associated
                          document_type:
                            $ref: "../base/v1/enums.yml#/components/schemas/DocumentType"
                            description: >-
                              The document type associated with the user's document 
                              number. Accepted values are cpf, cnpj, passport, 
                              rg, rne, and other
                          document:
                            type: string
                            description: The document number associated with the user
                payments:
                  type: array
                  description: The payments used in this purchase
                  items:
                    type: object
                    required:
                      - id
                      - method
                      - payment_value
                      - installments
                      - status
                    properties:
                      id:
                        type: string
                        description: >-
                          The unique identifier for the payment within your platform. 
                          If you don't have one you can send us the order id. 
                          Be advised that this is the identifier to be used 
                          if in the future you need to update payment information
                      method:
                        type: string
                        description: The payment's method. The allowed values are credit_card, boleto, wallet, and other
                        enum:
                          - credit_card
                          - boleto
                          - wallet
                          - other
                      payment_value:
                        type: number
                        format: float
                        minimum: 0
                      installments:
                        type: integer
                        description: The number of installments (e.g. "parcelas") to be paid
                      interest:
                        type: number
                        format: float
                        minimum: 0
                        maximum: 100
                        description: >-
                          The applied interest rate - where 0 means no interest 
                          was applied and 1 means 100% monthly interest was applied
                      status:
                        $ref: "../base/v1/enums.yml#/components/schemas/PaymentStatus"
                      document_type:
                        $ref: "../base/v1/enums.yml#/components/schemas/DocumentType"
                        description: >-
                          The document type associated with the payment's document 
                          number. Accepted values are cpf, cnpj, passport, rg, 
                          rne, and other
                      document:
                        type: string
                        description: The document number associated with the payer
                      credit_card:
                        type: object
                        description: >-
                          The credit card associated with the payment. 
                          Note: credit_card is required only if the method 
                          is credit_card
                        required:
                          - first_six_digits
                          - last_four_digits
                          - expiration_date
                          - holder_name
                        properties:
                          first_six_digits:
                            type: string
                            minLength: 6
                            maxLength: 6
                            description: The first six digits of the credit card number (should be only digits)
                          last_four_digits:
                            type: string
                            minLength: 4
                            maxLength: 4
                            description: The last four digits of the credit card number (should be only digits)
                          expiration_date:
                            type: string
                            minLength: 5
                            maxLength: 5
                            pattern: '^([0-9]{2})\/([0-9]{2})$'
                            description: The credit card's expiration date, formatted as mm/yy
                          holder_name:
                            type: string
                            description: The credit card holder's full name
                      billing_address:
                        description: >-
                          The billing address associated with the payment. 
                          Note: billing_address is required only if the method 
                          is credit_card or boleto
                        $ref: "../base/v1/entities.yml#/components/schemas/Address"
      responses:
        '201':
          $ref: "../base/v1/responses.yml#/components/schemas/20xResponse"
        '400':
          $ref: "../base/v1/responses.yml#/components/schemas/400Response"
        '401':
          $ref: "../base/v1/responses.yml#/components/schemas/401Response"
        '403':
          $ref: "../base/v1/responses.yml#/components/schemas/403Response"
        '503':
          $ref: "../base/v1/responses.yml#/components/schemas/503Response"
    put:
      summary: Notify Legiti when an order's status is updated.
      description: Update order status
      tags:
        - order
      operationId: order_put
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - status
              properties:
                id:
                  type: string
                  description: The order's unique identifier within your platform
                status:
                  $ref: "../base/v1/enums.yml#/components/schemas/OrderStatus"
                status_reason:
                  type: string
                  description: The reason for the status change
      responses:
        '200':
          $ref: "../base/v1/responses.yml#/components/schemas/20xResponse"
        '400':
          $ref: "../base/v1/responses.yml#/components/schemas/400Response"
        '401':
          $ref: "../base/v1/responses.yml#/components/schemas/401Response"
        '403':
          $ref: "../base/v1/responses.yml#/components/schemas/403Response"
        '503':
          $ref: "../base/v1/responses.yml#/components/schemas/503Response"
  /ticketing/v1/auth:
    $ref: "../base/v1/entities.yml#/components/schemas/Auth"
  /ticketing/v1/order/mark_fraudulent:
    $ref: "../base/v1/entities.yml#/components/schemas/OrderMarkedFraudulent"
  /ticketing/v1/order/payment:
    $ref: "../base/v1/entities.yml#/components/schemas/PaymentUpdate"
  /ticketing/v1/user:
    $ref: "../base/v1/entities.yml#/components/schemas/User"
  /ticketing/v1/password:
    $ref: "../base/v1/entities.yml#/components/schemas/Password"
components:
  schemas:
    Event:
      type: object
      required:
        - id
        - title
        - organizers
        - is_virtual
        - event_start_datetime
        - event_last_datetime
      properties:
        is_virtual:
          type: boolean
        venue:
          $ref: "../base/v1/entities.yml#/components/schemas/Address"
        organizers:
          type: array
          items:
            type: string
        description:
          type: string
        id:
          type: string
        categories:
          type: array
          items:
            type: string
        title:
          type: string
        event_start_datetime:
          type: string
          format: date-time
        event_last_datetime:
          type: string
          format: date-time
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []