openapi: 3.0.1
externalDocs:
    description: Official documentation
    url: https://docs.legiti.com/
info:
  title: Legiti Ticketing API
  description: >-
    Legiti protects your company from losses due to fraud and
    chargebacks, maximizing revenue from valid purchases and minimizing
    unnecessary customer friction. We accomplish this by making predictions
    based on past and present customer behavior to evaluate the likelihood
    that an order is fraudulent.
  version: "1.0"
  license:
    name: MIT
servers:
  - url: 'https://legiti-api.lgtcdn.net'
paths:
  /ticketing/v1/event:
    put:
      description: Send information to Legiti any time an event's information (description, venue, start/end time, etc...) is altered.
      tags:
        - event
      operationId: event_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutEvent"
      responses:
        '200':
          description: Auto generated using Swagger Inspector
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                '0':
                  value: '{"message": "Valid update request!"}'
      servers:
        - url: 'https://legiti-api.lgtcdn.net'
    post:
      description: Auto generated using Swagger Inspector
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostEvent"
      responses:
        '201':
          description: Auto generated using Swagger Inspector
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              examples:
                '0':
                  value: '{"message": "Valid create request!"}'
      servers:
        - url: 'https://legiti-api.lgtcdn.net'
    servers:
      - url: 'https://legiti-api.lgtcdn.net'
components:
  schemas:
    PostEvent:
      $ref: "#/components/schemas/EventEntity/properties"
      required:
        - id
        - title
        - organizers
        - is_virtual
        - valid_from
        - valid_until
    Address:
      type: object
      required:
        - street_name
        - street_number
        - city
        - zip_code
        - state
        - country
      properties:
        street_name:
          type: string
          description: The street of the address
        street_number:
          type: string
          description: The street number of the address
        city:
          type: string
          description: The city in which the address is located
        zip_code:
          type: string
          description: The zip code (e.g. CEP) of the address
        state:
          type: string
          description: The up to three-character ISO 3166-2 abbreviation of the state in which the address is located
        country:
          type: string
          description: The two-character ISO 3166-2 country code in which the address is located
        latitude:
          type: number
          format: float
          description: The exact latitude of the address
        longitude: 
          type: number
          format: float
          description: The exact longitude of the address
    EventEntity:
      type: object
      properties:
        is_virtual:
          type: boolean
        venue:
          $ref: "#/components/schemas/Address"
        organizer_ids:
          type: array
          items:
            type: string
        event_last_datetime:
          type: string
        organizers:
          type: array
          items:
            type: string
        description:
          type: string
        id:
          type: string
        categories:
          type: array
          items:
            type: string
        title:
          type: string
        event_start_datetime:
          type: string
    SuccessResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    ErrorResponse:
      type: object
      description: >-
            List of fields, each one with the name and a message explaining the problem.
      required:
        - error_message
    AuthorizationErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT