openapi: 3.0.1
externalDocs:
    description: Official documentation
    url: https://docs.legiti.com/
info:
  title: Legiti Ticketing API
  description: >-
    Legiti protects your company from losses due to fraud and
    chargebacks, maximizing revenue from valid purchases and minimizing
    unnecessary customer friction. We accomplish this by making predictions
    based on past and present customer behavior to evaluate the likelihood
    that an order is fraudulent.
  version: "1.0"
  license:
    name: MIT
servers:
  - url: 'https://legiti-api.lgtcdn.net'
paths:
  /ticketing/v1/event:
    post:
      description: Notify Legiti any time a new event is created.
      tags:
        - event
      operationId: event_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostEvent"
      responses:
        '200':
          description: Valid Sandbox request
          content:
            application/json:
              schema:
                $ref: "#/components/schema/SuccessResponse"
        '201':
          description: Valid create request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/ErrorResponseAPI"
        '401':
          description: Auth header not provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseAuthNotProvided"
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseNotAuthorized"
        '503':
          description: Internal error on DB insertion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseAPI"
          
    put:
      description: Send information to Legiti any time an event's information (description, venue, start/end time, etc...) is altered.
      tags:
        - event
      operationId: event_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutEvent"
      responses:
        '200':
          description: Valid update request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/ErrorResponseAPI"
        '401':
          description: Auth header not provided
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseAuthNotProvided"
        '403':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseNotAuthorized"
        '503':
          description: Internal error on DB insertion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseAPI"
components:
  schemas:
    PostEvent:
      $ref: "#/components/schemas/EventEntity/properties"
      required:
        - id
        - title
        - organizers
        - is_virtual
        - valid_from
        - valid_until
    PutEvent:
      $ref: "#/components/schemas/EventEntity/properties"
      required:
        - id
        - title
        - organizers
        - is_virtual
        - valid_from
        - valid_until
    Address:
      type: object
      required:
        - street_name
        - street_number
        - city
        - zip_code
        - state
        - country
      properties:
        street_name:
          type: string
          description: The street of the address
        street_number:
          type: string
          description: The street number of the address
        city:
          type: string
          description: The city in which the address is located
        zip_code:
          type: string
          description: The zip code (e.g. CEP) of the address
        state:
          type: string
          description: The up to three-character ISO 3166-2 abbreviation of the state in which the address is located
        country:
          type: string
          description: The two-character ISO 3166-2 country code in which the address is located
        latitude:
          type: number
          format: float
          description: The exact latitude of the address
        longitude: 
          type: number
          format: float
          description: The exact longitude of the address
    EventEntity:
      type: object
      properties:
        is_virtual:
          type: boolean
        venue:
          $ref: "#/components/schemas/Address"
        organizer_ids:
          type: array
          items:
            type: string
        event_last_datetime:
          type: string
        organizers:
          type: array
          items:
            type: string
        description:
          type: string
        id:
          type: string
        categories:
          type: array
          items:
            type: string
        title:
          type: string
        event_start_datetime:
          type: string
    SuccessResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    ErrorResponseAPI:
      type: object
      description: Request is missing required properties
      required:
        - error_message
        - error_code
      properties:
        error_message:
          type: object
        error_code:
          type: number
    ErrorResponseNoAuthHeader:
      type: object
      description: Authorization header not present in request
      required:
        - message
      properties:
        message:
          type: string
    ErrorResponseAuthorizer:
      type: object
      description: Provided API token not authorized to access this resource
      required:
        - Message
      properties:
        Message:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []