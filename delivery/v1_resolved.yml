openapi: 3.0.1
externalDocs:
  description: Official documentation
  url: https://docs.legiti.com/
info:
  title: Legiti Delivery API
  description: Legiti protects your company from losses due to fraud and
    chargebacks, maximizing revenue from valid purchases and minimizing
    unnecessary customer friction. We accomplish this by making predictions
    based on past and present customer behavior to evaluate the likelihood that
    an order is fraudulent.
  version: "1.0"
  license:
    name: MIT
  contact:
    name: Legiti Dev Team
    url: http://www.docs.legiti.com
    email: publishing@legiti.com
servers:
  - url: https://legiti-api.lgtcdn.net
paths:
  /delivery/v1/evaluation:
    post:
      description: Send requests to this endpoint whenever you have an order that you
        would like to get evaluated by Legiti.
      tags:
        - evaluation
      operationId: ticketing_evaluation
      requestBody:
        content:
          application/json:
            schema:
              title: body_ticketing_evaluation
              type: object
              required:
                - order_id
                - user_id
                - total_paid_value
                - shipping_value
                - order_datetime
                - order_items
                - shipping_address
                - payments
              properties:
                order_id:
                  type: string
                  description: The order's unique identifier within your platform
                user_id:
                  type: string
                  description: Your unique identifier for this user in your platform
                total_paid_value:
                  type: number
                  format: float
                  description: The exact amount that the user paid
                shipping_value:
                  type: number
                  format: float
                  description: Delivery's shipping value
                order_datetime:
                  type: string
                  format: date-time
                  description: The order's date and time of sale in UTC following the ISO 8601
                    format (YYYY-MM-DDTHH:mm:ssZ)
                order_items:
                  type: array
                  items: {}
                  description: The purchased items (e.g. products)
                shipping_address: {}
                payments:
                  type: array
                  description: the payments used in this purchase
                  items: {}
      responses:
        "200":
          description: Order successfully evaluated
          content:
            application/json:
              schema:
                title: reponse_evaluation_ok
                type: object
                required:
                  - legiti_decision
                properties:
                  legiti_decision:
                    type: string
                    description: "Legiti's suggestion for treating this order. Will be one of:
                      [\"approve\", \"reject\", \"manual\" or \"unavailable\"].
                      Note that \"manual\" will only be returned for Legiti
                      customers that have an existing manual analysis flow, and
                      \"unavailable\" will only be returned in the case that
                      your company is in the pilot phase of its Legiti
                      integration."
                    enum:
                      - approve
                      - reject
                      - manual
                      - unavailable
                  message:
                    type: string
                    description: Optional field used to provide further information on
                      `legiti_decision`.
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                title: response_invalid_request
                oneOf:
                  - title: response_invalid_json
                    type: object
                    description: Request body contains invalid JSON
                    required:
                      - error_message
                      - error_code
                    properties:
                      error_message:
                        type: string
                      error_code:
                        type: number
                  - title: response_missing_required_properties
                    type: object
                    description: Request is missing required properties
                    required:
                      - error_message
                      - error_code
                    properties:
                      error_message:
                        type: object
                      error_code:
                        type: number
                  - title: response_invalid_property_type
                    type: object
                    description: Request contains properties with incorrect types
                    required:
                      - error_message
                      - error_code
                    properties:
                      error_message:
                        type: object
                      error_code:
                        type: number
        "401":
          description: Auth header not provided
          content:
            application/json:
              schema:
                title: response_no_auth
                type: object
                description: Authorization header not present in request
                required:
                  - message
                properties:
                  message:
                    type: string
        "403":
          description: Unauthorized
          content:
            application/json:
              schema:
                title: response_evaluation_unauthorized
                oneOf:
                  - type: object
                    title: response_forbidden
                    description: Valid API key not authorized to access /evaluation resource
                    required:
                      - error_message
                      - error_code
                    properties:
                      error_message:
                        type: string
                      error_code:
                        type: number
                  - title: response_not_authorized
                    type: object
                    description: Provided API token not authorized to access this resource
                    required:
                      - Message
                    properties:
                      Message:
                        type: string
        "503":
          description: Internal server error on DB insertion
          content:
            application/json:
              schema:
                title: response_internal_error
                type: object
                required:
                  - error_message
                  - error_code
                properties:
                  error_message:
                    type: object
                  error_code:
                    type: number
  /delivery/v1/order:
    post:
      summary: Notify Legiti any time a new order is created
      description: You can send order-related information to Legiti via the /order endpoint
      tags:
        - order
      operationId: order_post
      requestBody:
        content:
          application/json:
            schema:
              title: body_order_post
              type: object
              required:
                - id
                - user_id
                - total_paid_value
                - status
                - items
                - payments
              properties:
                id:
                  type: string
                  description: The order's unique identifier within your platform
                user_id:
                  type: string
                  description: The buyer's id
                total_paid_value:
                  type: number
                  format: float
                  minimum: 0
                  description: The exact amount that the user paid
                total_gross_value:
                  type: number
                  format: float
                  minimum: 0
                  description: The sum of all the order items value
                discount_value:
                  type: number
                  format: float
                  minimum: 0
                  description: The discount value applied to the order
                coupon_names:
                  type: array
                  description: "The name of the coupons that were applied. Note: if coupon_names
                    is provided, discount_value is also required"
                  items:
                    type: string
                currency:
                  type: string
                  maxLength: 3
                  minLength: 3
                  description: The currency of the total_paid_value, as an ISO-4217 currency code
                status:
                  type: string
                  description: "The status of the order. The allowed values are:  approved,
                    declined, pending, refunded, manual_analysis,  cancelled,
                    and other"
                  enum:
                    - approved
                    - declined
                    - pending
                    - refunded
                    - manual_analysis
                    - cancelled
                    - other,
                items:
                  title: order_items
                  type: array
                  items:
                    title: order_item
                    description: Legiti standardized format for representing purchased items
                    type: object
                    required:
                      - quantity
                      - unit_price
                      - total_value
                      - product
                    properties:
                      quantity:
                        type: number
                        format: integer
                        description: The purchased quantity of this product
                      unit_price:
                        type: number
                        format: float
                        description: The purchased product's unit price
                      unit_discount:
                        type: number
                        format: float
                        description: The discount amount applied to each unit of this product
                      total_value:
                        type: number
                        format: float
                        description: The total value paid for this product
                      product:
                        type: object
                        description: Legiti standardized format for representing a product.
                        required:
                          - sku
                          - title
                        properties:
                          sku:
                            type: string
                            description: The product sku or unique identifier within your platform
                          title:
                            type: string
                            description: The product title or listing name
                          product_id:
                            type: string
                            description: The product secondary id (it can be the id of the main product if
                              this is a variation only)
                          description:
                            type: string
                            description: The product description
                          vendors:
                            type: array
                            description: The id of the users who are selling the product. If your users
                              can't sell a product you may not send this field
                            items:
                              type: string
                          categories:
                            type: array
                            description: Your platform categories that apply to this product. (Arbitrary
                              categories accepted, but must be consistent.)
                            items:
                              type: string
                      delivery:
                        $ref: "#/components/schemas/Delivery"
                payments:
                  title: order_payment
                  type: array
                  description: The payments used in this purchase
                  items:
                    oneOf:
                      - title: payment_credit_card
                        type: object
                        required:
                          - id
                          - method
                          - payment_value
                          - installments
                          - status
                          - credit_card
                          - billing_address
                        properties:
                          id:
                            type: string
                            description: The unique identifier for the payment within your platform. If you
                              don't have one you can send us the order id. Be
                              advised that this is the identifier to be used if
                              in the future you need to update payment
                              information
                          method:
                            type: string
                            description: The payment's method. The allowed values are credit_card, boleto,
                              wallet, and other
                            enum:
                              - credit_card
                              - boleto
                              - wallet
                              - other
                          payment_value:
                            type: number
                            format: float
                            minimum: 0
                          installments:
                            type: integer
                            description: The number of installments (e.g. "parcelas") to be paid
                          interest:
                            type: number
                            format: float
                            minimum: 0
                            maximum: 100
                            description: The applied interest rate - where 0 means no interest was applied
                              and 1 means 100% monthly interest was applied
                          status:
                            type: string
                            description: "The status of the payment. The allowed values are: approved,
                              declined, and pending"
                            enum:
                              - approved
                              - declined
                              - pending
                          document_type:
                            type: string
                            description: The document type associated with the user's document  number.
                              Accepted values are cpf, cnpj, passport,  rg, rne,
                              and other
                            enum:
                              - cpf
                              - cnpj
                              - passport
                              - rg
                              - rne
                              - other
                          document:
                            type: string
                            description: The document number associated with the payer
                          credit_card:
                            type: object
                            description: "The credit card associated with the payment. Note: credit_card is
                              required only if the method is credit_card"
                            required:
                              - first_six_digits
                              - last_four_digits
                              - expiration_date
                              - holder_name
                            properties:
                              first_six_digits:
                                type: string
                                minLength: 6
                                maxLength: 6
                                description: The first six digits of the credit card number (should be only
                                  digits)
                              last_four_digits:
                                type: string
                                minLength: 4
                                maxLength: 4
                                description: The last four digits of the credit card number (should be only
                                  digits)
                              expiration_date:
                                type: string
                                minLength: 5
                                maxLength: 5
                                pattern: ^([0-9]{2})\/([0-9]{2})$
                                description: The credit card's expiration date, formatted as mm/yy
                              holder_name:
                                type: string
                                description: The credit card holder's full name
                          billing_address:
                            title: address
                            type: object
                            required:
                              - street_name
                              - street_number
                              - city
                              - zip_code
                              - state
                              - country
                            properties:
                              street_name:
                                type: string
                                description: The street of the address
                              street_number:
                                type: string
                                description: The street number of the address
                              city:
                                type: string
                                description: The city in which the address is located
                              zip_code:
                                type: string
                                description: The zip code (e.g. CEP) of the address
                              state:
                                type: string
                                description: The up to three-character ISO 3166-2 abbreviation of the state in
                                  which the address is located
                                maxLength: 3
                              country:
                                type: string
                                description: The two-character ISO 3166-2 country code in which the address is
                                  located
                                maxLength: 2
                                minLength: 2
                              latitude:
                                type: number
                                format: float
                                description: The exact latitude of the address
                              longitude:
                                type: number
                                format: float
                                description: The exact longitude of the address
                      - title: payment_boleto
                        type: object
                        required:
                          - id
                          - method
                          - payment_value
                          - installments
                          - status
                          - billing_address
                        properties:
                          id:
                            type: string
                            description: The unique identifier for the payment within your platform. If you
                              don't have one you can send us the order id. Be
                              advised that this is the identifier to be used if
                              in the future you need to update payment
                              information
                          method:
                            type: string
                            description: The payment's method. The allowed values are credit_card, boleto,
                              wallet, and other
                            enum:
                              - credit_card
                              - boleto
                              - wallet
                              - other
                          payment_value:
                            type: number
                            format: float
                            minimum: 0
                          installments:
                            type: integer
                            description: The number of installments (e.g. "parcelas") to be paid
                          interest:
                            type: number
                            format: float
                            minimum: 0
                            maximum: 100
                            description: The applied interest rate - where 0 means no interest was applied
                              and 1 means 100% monthly interest was applied
                          status:
                            $ref: "#/paths/~1delivery~1v1~1order/post/requestBody/content/application~1json\
                              /schema/properties/payments/items/oneOf/0/propert\
                              ies/status"
                          document_type:
                            $ref: "#/paths/~1delivery~1v1~1order/post/requestBody/content/application~1json\
                              /schema/properties/payments/items/oneOf/0/propert\
                              ies/document_type"
                          document:
                            type: string
                            description: The document number associated with the payer
                          billing_address:
                            $ref: "#/paths/~1delivery~1v1~1order/post/requestBody/content/application~1json\
                              /schema/properties/payments/items/oneOf/0/propert\
                              ies/billing_address"
                      - title: payment_other
                        type: object
                        required:
                          - id
                          - method
                          - payment_value
                          - installments
                          - status
                        properties:
                          id:
                            type: string
                            description: The unique identifier for the payment within your platform. If you
                              don't have one you can send us the order id. Be
                              advised that this is the identifier to be used if
                              in the future you need to update payment
                              information
                          method:
                            type: string
                            description: The payment's method. The allowed values are credit_card, boleto,
                              wallet, and other
                            enum:
                              - credit_card
                              - boleto
                              - wallet
                              - other
                          payment_value:
                            type: number
                            format: float
                            minimum: 0
                          installments:
                            type: integer
                            description: The number of installments (e.g. "parcelas") to be paid
                          interest:
                            type: number
                            format: float
                            minimum: 0
                            maximum: 100
                            description: The applied interest rate - where 0 means no interest was applied
                              and 1 means 100% monthly interest was applied
                          status:
                            $ref: "#/paths/~1delivery~1v1~1order/post/requestBody/content/application~1json\
                              /schema/properties/payments/items/oneOf/0/propert\
                              ies/status"
                          document_type:
                            $ref: "#/paths/~1delivery~1v1~1order/post/requestBody/content/application~1json\
                              /schema/properties/payments/items/oneOf/0/propert\
                              ies/document_type"
                          document:
                            type: string
                            description: The document number associated with the payer
                          billing_address:
                            $ref: "#/paths/~1delivery~1v1~1order/post/requestBody/content/application~1json\
                              /schema/properties/payments/items/oneOf/0/propert\
                              ies/billing_address"
                shipping_address:
                  title: address
                  type: object
                  required:
                    - street_name
                    - street_number
                    - city
                    - zip_code
                    - state
                    - country
                  properties:
                    street_name:
                      type: string
                      description: The street of the address
                    street_number:
                      type: string
                      description: The street number of the address
                    city:
                      type: string
                      description: The city in which the address is located
                    zip_code:
                      type: string
                      description: The zip code (e.g. CEP) of the address
                    state:
                      type: string
                      description: The up to three-character ISO 3166-2 abbreviation of the state in
                        which the address is located
                      maxLength: 3
                    country:
                      type: string
                      description: The two-character ISO 3166-2 country code in which the address is
                        located
                      maxLength: 2
                      minLength: 2
                    latitude:
                      type: number
                      format: float
                      description: The exact latitude of the address
                    longitude:
                      type: number
                      format: float
                      description: The exact longitude of the address
      responses:
        "200":
          description: Valid create request
          content:
            application/json:
              schema:
                title: response_collection_ok
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
        "201":
          $ref: "#/paths/~1delivery~1v1~1order/post/responses/200"
        "400":
          $ref: "#/paths/~1delivery~1v1~1evaluation/post/responses/400"
        "401":
          $ref: "#/paths/~1delivery~1v1~1evaluation/post/responses/401"
        "403":
          description: Not authorized
          content:
            application/json:
              schema:
                title: response_not_authorized
                type: object
                description: Provided API token not authorized to access this resource
                required:
                  - Message
                properties:
                  Message:
                    type: string
        "503":
          $ref: "#/paths/~1delivery~1v1~1evaluation/post/responses/503"
    put:
      summary: Notify Legiti when an order's status is updated.
      description: Update order status
      tags:
        - order
      operationId: order_put
      requestBody:
        content:
          application/json:
            schema:
              title: body_order_put
              type: object
              required:
                - id
                - status
              properties:
                id:
                  type: string
                  description: The order's unique identifier within your platform
                status:
                  type: string
                  description: "The status of the order. The allowed values are:  approved,
                    declined, pending, refunded, manual_analysis,  cancelled,
                    and other"
                  enum:
                    - approved
                    - declined
                    - pending
                    - refunded
                    - manual_analysis
                    - cancelled
                    - other,
                status_reason:
                  type: string
                  description: The reason for the status change
      responses:
        "200":
          $ref: "#/paths/~1delivery~1v1~1order/post/responses/200"
        "400":
          $ref: "#/paths/~1delivery~1v1~1evaluation/post/responses/400"
        "401":
          $ref: "#/paths/~1delivery~1v1~1evaluation/post/responses/401"
        "403":
          $ref: "#/paths/~1delivery~1v1~1order/post/responses/403"
        "503":
          $ref: "#/paths/~1delivery~1v1~1evaluation/post/responses/503"
  /delivery/v1/order/delivery:
    put:
      description: Notify Legiti of delivery information updates.
      tags:
        - order
      operationId: delivery_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Delivery"
      responses:
        "200":
          $ref: "#/paths/~1delivery~1v1~1order/post/responses/200"
        "400":
          $ref: "#/paths/~1delivery~1v1~1evaluation/post/responses/400"
        "401":
          $ref: "#/paths/~1delivery~1v1~1evaluation/post/responses/401"
        "403":
          $ref: "#/paths/~1delivery~1v1~1order/post/responses/403"
        "503":
          $ref: "#/paths/~1delivery~1v1~1evaluation/post/responses/503"
  /delivery/v1/auth:
    post:
      summary: Notify Legiti any time a user tries to login and logout of your platform
      description: Account login/logout behavior is highly correlated with fraudulent
        activity. You can send information about successful or failed login
        attempts for an account (as well as logouts)
      tags:
        - auth
      operationId: auth_post
      requestBody:
        content:
          application/json:
            schema:
              title: body_auth
              type: object
              required:
                - user_id
                - action_type
              properties:
                user_id:
                  type: string
                  description: The user ID that was (or was attempted to be) logged into
                action_type:
                  type: string
                  enum:
                    - login_success
                    - login_failure
                    - logout
                  description: What type of authentication activity occurred. Accepted values are
                    limited to 'login_success', 'login_failure', and 'logout'
                    (case-insensitive)
            examples:
              login:
                value: |-
                  {
                    "user_id":     "232550",
                    "action_type": "login_success"
                  }
      responses:
        "200":
          description: Valid create request
          content:
            application/json:
              schema:
                title: response_collection_ok
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
        "201":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/200"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                title: response_invalid_request
                oneOf:
                  - title: response_invalid_json
                    type: object
                    description: Request body contains invalid JSON
                    required:
                      - error_message
                      - error_code
                    properties:
                      error_message:
                        type: string
                      error_code:
                        type: number
                  - title: response_missing_required_properties
                    type: object
                    description: Request is missing required properties
                    required:
                      - error_message
                      - error_code
                    properties:
                      error_message:
                        type: object
                      error_code:
                        type: number
                  - title: response_invalid_property_type
                    type: object
                    description: Request contains properties with incorrect types
                    required:
                      - error_message
                      - error_code
                    properties:
                      error_message:
                        type: object
                      error_code:
                        type: number
        "401":
          description: Auth header not provided
          content:
            application/json:
              schema:
                title: response_no_auth
                type: object
                description: Authorization header not present in request
                required:
                  - message
                properties:
                  message:
                    type: string
        "403":
          description: Not authorized
          content:
            application/json:
              schema:
                title: response_not_authorized
                type: object
                description: Provided API token not authorized to access this resource
                required:
                  - Message
                properties:
                  Message:
                    type: string
        "503":
          description: Internal server error on DB insertion
          content:
            application/json:
              schema:
                title: response_internal_error
                type: object
                required:
                  - error_message
                  - error_code
                properties:
                  error_message:
                    type: object
                  error_code:
                    type: number
  /delivery/v1/order/mark_fraudulent:
    post:
      summary: Notify Legiti that an order was found to be fraudulent
      tags:
        - order
      operationId: order_marked_fraudulent_post
      requestBody:
        content:
          application/json:
            schema:
              title: body_order_mark_fraudulent
              type: object
              required:
                - order_id
                - fraud_signal_type
              properties:
                order_id:
                  type: string
                  description: The order's unique identifier within your platform
                fraud_signal_type:
                  type: string
                  enum:
                    - acquirer
                    - manual_analysis
                    - chargeback
                    - external_antifraud
                    - internal_system
                    - other
                  description: The mechanism by which you identified the order as fraudulent.
                    Current accepted values are acquirer, manual_analysis,
                    chargeback, external_antifraud, internal_system, and other
      responses:
        "200":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/200"
        "201":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/200"
        "400":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/400"
        "401":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/401"
        "403":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/403"
        "503":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/503"
  /delivery/v1/order/payment:
    put:
      summary: Notify Legiti of payment status updates (supplied by your acquirer)
      tags:
        - order
      operationId: payment_update_put
      requestBody:
        content:
          application/json:
            schema:
              title: body_order_payment_put
              type: object
              required:
                - id
                - status
              properties:
                id:
                  type: string
                  description: The unique identifier for the payment within your platform
                status:
                  $ref: "#/paths/~1delivery~1v1~1order/post/requestBody/content/application~1json\
                    /schema/properties/payments/items/oneOf/0/properties/status"
                status_reason:
                  type: string
                  description: The reason for the status change
      responses:
        "200":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/200"
        "400":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/400"
        "401":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/401"
        "403":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/403"
        "503":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/503"
  /delivery/v1/user:
    post:
      summary: Notify Legiti any time a new user is created
      tags:
        - user
      operationId: user_post
      requestBody:
        content:
          application/json:
            schema:
              title: body_user_post
              type: object
              required:
                - id
                - email
                - name
                - user_type
                - creation_datetime
              properties:
                id:
                  type: string
                  description: Your unique identifier for this user in your platform
                email:
                  type: string
                  description: The main email associated with the user
                document:
                  type: string
                  description: The document number associated with the user
                document_type:
                  $ref: "#/paths/~1delivery~1v1~1order/post/requestBody/content/application~1json\
                    /schema/properties/payments/items/oneOf/0/properties/docume\
                    nt_type"
                phone_number:
                  type: string
                  description: "The main phone number associated with the user (numbers only;
                    country code not included). Note: if phone_number is
                    provided, phone_country_code is also required"
                phone_country_code:
                  type: string
                  description: "The international country code associated with the phone number
                    (numbers only). Note: if phone_country_code is provided,
                    phone_number is also required"
                password_hash:
                  type: string
                  description: The secure (salted and hashed) password associated with the user
                name:
                  type: string
                  description: The user's full name
                gender:
                  type: string
                  enum:
                    - male
                    - female
                    - other
                    - undisclosed
                  description: "The user's gender. Accepted values are: male, female, other, and
                    undisclosed"
                user_type:
                  type: string
                  enum:
                    - consumer
                    - service_provider
                  description: "The user's type in your platform. Accepted values are: consumer,
                    service_provider"
                creation_datetime:
                  type: string
                  format: date-time
                  description: The datetime of when the user account was created
                address:
                  $ref: "#/paths/~1delivery~1v1~1order/post/requestBody/content/application~1json\
                    /schema/properties/payments/items/oneOf/0/properties/billin\
                    g_address"
      responses:
        "200":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/200"
        "201":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/200"
        "400":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/400"
        "401":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/401"
        "403":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/403"
        "503":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/503"
    put:
      summary: Send information to Legiti any time a user's information (email,
        address, name, password, etc...) is altered.
      tags:
        - user
      operationId: user_put
      requestBody:
        content:
          application/json:
            schema:
              title: body_user_put
              type: object
              required:
                - id
              properties:
                id:
                  type: string
                  description: Your unique identifier for this user in your platform
                email:
                  type: string
                  description: The main email associated with the user
                document:
                  type: string
                  description: The document number associated with the user
                document_type:
                  $ref: "#/paths/~1delivery~1v1~1order/post/requestBody/content/application~1json\
                    /schema/properties/payments/items/oneOf/0/properties/docume\
                    nt_type"
                phone_number:
                  type: integer
                  description: "The main phone number associated with the user (numbers only;
                    country code not included). Note: if phone_number is
                    provided, phone_country_code is also required"
                phone_country_code:
                  type: integer
                  description: "The international country code associated with the phone number
                    (numbers only). Note: if phone_country_code is provided,
                    phone_number is also required"
                password_hash:
                  type: string
                  description: The secure (salted and hashed) password associated with the user
                name:
                  type: string
                  description: The user's full name
                gender:
                  type: string
                  enum:
                    - male
                    - female
                    - other
                    - undisclosed
                  description: "The user's gender. Accepted values are: male, female, other, and
                    undisclosed"
                user_type:
                  type: string
                  enum:
                    - consumer
                    - service_provider
                  description: "The user's type in your platform. Accepted values are: consumer,
                    service_provider"
                creation_datetime:
                  type: string
                  format: date-time
                  description: The datetime of when the user account was created
                address:
                  $ref: "#/paths/~1delivery~1v1~1order/post/requestBody/content/application~1json\
                    /schema/properties/payments/items/oneOf/0/properties/billin\
                    g_address"
      responses:
        "200":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/200"
        "400":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/400"
        "401":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/401"
        "403":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/403"
        "503":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/503"
  /delivery/v1/password:
    post:
      summary: Notify Legiti any time a user who is not logged in either resets or
        recovers their password
      tags:
        - password
      operationId: password_post
      requestBody:
        content:
          application/json:
            schema:
              title: body_password
              type: object
              required:
                - recovery_email
                - action_type
              properties:
                recovery_email:
                  type: string
                  description: The email used to recover or reset the password
                action_type:
                  type: string
                  enum:
                    - recovery
                    - reset
                  description: The type of user action that was taken. Accepted values are
                    recovery and reset (case-insensitive)
      responses:
        "200":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/200"
        "201":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/200"
        "400":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/400"
        "401":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/401"
        "403":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/403"
        "503":
          $ref: "#/paths/~1delivery~1v1~1auth/post/responses/503"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Delivery:
      type: object
      description: Legiti standardized format for representing a product delivery.
      required:
        - id
        - type
        - status
      properties:
        id:
          type: string
          description: The delivery's unique identifier within your platform. Be advised,
            this is the id used to update delivery information afterwards
        type:
          type: string
          description: The delivery's shipping type. The allowed values are ['normal',
            'express', 'pickup']
          enum:
            - normal
            - express
            - pickup
        status:
          type: string
          description: The delivery's status. The allowed values are ['delivered',
            'confirmed', 'pending', 'cancelled', 'rejected']
          enum:
            - delivered
            - confirmed
            - pending
            - cancelled
            - rejected
        delivery_datetime:
          type: string
          description: The item's planned delivery date in UTC following the ISO 8601
            format (YYYY-MM-DDTHH:mm:ssZ)
        deliverer_id:
          type: string
          description: The deliverer's unique identifier within your platform
security:
  - bearerAuth: []
